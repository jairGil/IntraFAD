const mongoose = require("mongoose");
const util = require("../util/util");
const Docente = require("../models/docente");

//Información sobre la base de datos en MongoDB
const dbuser = "admin_intraFAD";
const dbname = "IntraFAD";
const dbpass = "eqeKVamw3GxLsjhc";

const uriDB = "mongodb://localhost:27017";

const dbhelper = {
  // Conexión a la base de datos
  connect: async () => {
    let conn = { action: "Conectar con BD", value: false, code: 500, msg: "No conectado" };
    await mongoose.connect(uriDB, { useNewUrlParser: true, useUnifiedTopology: true }).then(
      () => {
        conn = util.setResult(conn, true, 200, "Conectado a la BD");
      }, error => {
        conn = util.setResult(conn, false, 500, error.code + " - " + error.codeName);
      });

    return conn;
  },

  // Guardar un docente
  saveDocente: async (docente) => {
    let resultSave = { action: "Guardar docente", value: false, code: 500, msg: "No inicializado" }
    const auxDocente = new Docente(docente);

    await auxDocente.save().then(
      () => {
        resultSave = util.setResult(resultSave, true, 200, "Docente guardado exitosamente.");
      }, error => {
        resultSave = util.setResult(resultSave, false, 500, error + " - Error al guardar el docente");
      }
    );

    return resultSave;
  },

  // Buscar docente por email
  findDocenteByEmail: async (correo_institucional, action) => {
    let resultFind = { action: action, value: false, code: 500, msg: "No inicializado" }

    await Docente.findOne({ correo_institucional: correo_institucional }).then(
      (docente) => {
        if (docente) {
          resultFind = util.setResult(resultFind, true, 200, "Correo electrónico registrado en la BD");
          if (action === "login")
            resultFind.docente = docente;
        } else {
          resultFind = util.setResult(resultFind, false, 400, "Correo electrónico no registrado");
        }
      }, error => {
        resultFind = util.setResult(resultFind, false, 500, error + " - Error en la petición");
      }
    );

    return resultFind;
  },

  //Desconectar de la base de datos
  disconnect: async () => {
    await mongoose.disconnect();
  }
};


module.exports = dbhelper;